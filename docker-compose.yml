services:
  zookeeper-server: # zookeeper ayarları
    image: bitnami/zookeeper:latest
    container_name: zookeeper-server
    networks:
      - scrapping-project
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    restart: unless-stopped

  kafka-server: # kafka ayarları
    image: bitnami/kafka:latest
    container_name: kafka-server
    networks:
      - scrapping-project
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka-server:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-server:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper-server
    restart: unless-stopped

  kafdrop: # kafkayı tarayıcı üzerinden izlemek için kullanılıyor.
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    networks:
      - scrapping-project
    environment:
      KAFKA_BROKERCONNECT: "kafka-server:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"
    ports:
      - "9000:9000" # kafdrop portu
    depends_on:
      - kafka-server
    restart: unless-stopped # durmaz sürekli restart olur

  scraper: # scraper ayarları
    build:
      context: ./scraper
    container_name: scraper
    networks:
      - scrapping-project
    depends_on:
      - kafka-server
    command: >
          sh -c "sleep 30 && python /app/web_scraper.py"

  consumer: # consumer ayarları
    build:
      context: ./consumer
    container_name: consumer
    volumes:
      - ./data:/app/data
    networks:
      - scrapping-project
    depends_on:
      - kafka-server
    command: >
      sh -c "sleep 30 && python /app/consumer.py"

  api: # api ayarları
    build: ./api
    ports:
      - "5000:5000" # api portu
    volumes:
      - ./api:/app
    restart: unless-stopped
    stdin_open: true # konteynerin içine veri girişi
    tty: true # terminal veya komut satırı çıktısı

networks:
  scrapping-project:
    name: scrapping-project
    external: true